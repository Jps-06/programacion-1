import java.util.ArrayList;
import java.util.Scanner;

public class TorneoNumeros {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<Integer> numeros = new ArrayList<>();
        int opcion;
        int usosIngresar = 0, usosVer = 0, usosReiniciar = 0;

        do {
            System.out.println("\n=== MEN√ö DEL TORNEO DE N√öMEROS ===");
            System.out.println("1. Ingresar n√∫mero");
            System.out.println("2. Ver estad√≠sticas");
            System.out.println("3. Reiniciar datos");
            System.out.println("4. Salir");
            System.out.print("Seleccione una opci√≥n: ");
            opcion = sc.nextInt();

            switch (opcion) {
                case 1:
                    usosIngresar++;
                    System.out.print("Ingrese un n√∫mero entero positivo: ");
                    int num = sc.nextInt();

                    // Validar n√∫mero positivo
                    if (num > 0) {
                        numeros.add(num);
                        System.out.println("‚úÖ N√∫mero agregado correctamente.");
                    } else {
                        System.out.println("‚ùå Error: el n√∫mero debe ser positivo.");
                    }
                    break;

                case 2:
                    usosVer++;
                    if (numeros.isEmpty()) {
                        System.out.println("‚ö†Ô∏è No hay n√∫meros ingresados a√∫n.");
                    } else {
                        mostrarEstadisticas(numeros);
                    }
                    break;

                case 3:
                    usosReiniciar++;
                    numeros.clear();
                    System.out.println("üîÑ Datos reiniciados correctamente.");
                    break;

                case 4:
                    System.out.println("üëã Saliendo del programa...");
                    break;

                default:
                    System.out.println("‚ùå Opci√≥n no v√°lida. Intente nuevamente.");
                    break;
            }

        } while (opcion != 4);

        // Mostrar estad√≠sticas extra (opcional)
        System.out.println("\n=== Resumen de uso del men√∫ ===");
        System.out.println("Opci√≥n 1 (Ingresar): " + usosIngresar + " veces");
        System.out.println("Opci√≥n 2 (Ver estad√≠sticas): " + usosVer + " veces");
        System.out.println("Opci√≥n 3 (Reiniciar): " + usosReiniciar + " veces");
        System.out.println("Programa finalizado. üëã");
        sc.close();
    }

    // Funci√≥n que muestra las estad√≠sticas
    public static void mostrarEstadisticas(ArrayList<Integer> numeros) {
        int total = numeros.size();
        int pares = 0, impares = 0, suma = 0, max = numeros.get(0), min = numeros.get(0), primos = 0;
        int ultimo = numeros.get(numeros.size() - 1);

        // Calcular estad√≠sticas con un ciclo for
        for (int n : numeros) {
            suma += n;
            if (n % 2 == 0) pares++;
            else impares++;

            if (n > max) max = n;
            if (n < min) min = n;

            if (esPrimo(n)) primos++;
        }

        double promedio = (double) suma / total;
        int sumaDigitos = sumaDeDigitos(ultimo);

        System.out.println("\nüìä === ESTAD√çSTICAS ===");
        System.out.println("Total de n√∫meros: " + total);
        System.out.println("Cantidad de pares: " + pares);
        System.out.println("Cantidad de impares: " + impares);
        System.out.println("N√∫mero m√°ximo: " + max);
        System.out.println("N√∫mero m√≠nimo: " + min);
        System.out.println("Suma total: " + suma);
        System.out.printf("Promedio: %.2f\n", promedio);
        System.out.println("Cantidad de n√∫meros primos: " + primos);
        System.out.println("Suma de d√≠gitos del √∫ltimo n√∫mero: " + sumaDigitos);
    }

    // Verificar si un n√∫mero es primo
    public static boolean esPrimo(int n) {
        if (n < 2) return false;
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) return false;
        }
        return true;
    }

    // Calcular la suma de los d√≠gitos de un n√∫mero
    public static int sumaDeDigitos(int n) {
        int suma = 0;
        while (n > 0) {
            suma += n % 10;
            n /= 10;
        }
        return suma;
    }
}
